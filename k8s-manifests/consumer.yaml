# HPA Configuration for Consumer Deployment
apiVersion: autoscaling/v2  # HPA API version
kind: HorizontalPodAutoscaler  # Defines this as an HPA resource
metadata:
  name: consumer-hpa  # Name of the HPA
  namespace: sdtd-project  # Namespace where the HPA is deployed

# Specification of the HPA
spec:
  # Reference to the Deployment that this HPA will scale
  scaleTargetRef:
    apiVersion: apps/v1  # API version of the target resource
    kind: Deployment  # Type of the target resource
    name: consumer  # Name of the Deployment that the HPA will scale

  # Minimum and maximum number of pod replicas
  minReplicas: 1  # Minimum number of replicas
  maxReplicas: 3  # Maximum number of replicas

  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600  # Increase to 10 minutes
      policies:
        - type: Pods
          value: 1
          periodSeconds: 120  # Increase to 2 minutes

  # Metrics for scaling
  metrics:
    - type: Resource  # Type of the metric to be used for scaling
      resource:
        name: cpu  # The resource to be monitored
        target:
          type: Utilization  # Utilization target type
          averageUtilization: 50  # Target CPU utilization percentage for scaling
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: sdtd-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      initContainers:
      - name: check-kafka
        image: busybox:1.28
        command:
        - sh
        - -c
        - until nslookup kafka; do echo waiting for kafka; sleep 2; done
      - name: check-database
        image: busybox:1.28
        command:
        - sh
        - -c
        - until nslookup database; do echo waiting for database; sleep 2; done
      containers:
      - name: consumer
        image: ghbadr/consumer:850a1d63
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - ps aux | grep python || exit 1
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - ps aux | grep python || exit 1
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: MONGODB_URL
        - name: MONGODB_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: MONGODB_DB_NAME
        - name: MONGODB_COLLECTION
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: MONGODB_COLLECTION
        - name: KAFKA_NUM_PARTITIONS
          valueFrom:
            configMapKeyRef:
              name: producer-config
              key: KAFKA_NUM_PARTITIONS