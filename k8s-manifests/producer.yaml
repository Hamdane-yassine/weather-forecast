# HPA Configuration for Producer Deployment
apiVersion: autoscaling/v2  # HPA API version
kind: HorizontalPodAutoscaler  # Defines this as an HPA resource
metadata:
  name: producer-hpa  # Name of the HPA
  namespace: sdtd-project  # Namespace where the HPA is deployed

# Specification of the HPA
spec:
  # Reference to the Deployment that this HPA will scale
  scaleTargetRef:
    apiVersion: apps/v1  # API version of the target resource
    kind: Deployment  # Type of the target resource
    name: producer  # Name of the Deployment that the HPA will scale

  # Minimum and maximum number of pod replicas
  minReplicas: 3  # Minimum number of replicas
  maxReplicas: 20  # Maximum number of replicas

  behavior:
    scaleDown:
      stabilizationWindowSeconds: 150  # Increase to 10 minutes
      policies:
        - type: Pods
          value: 1
          periodSeconds: 30  # Increase to 2 minutes

  # Metrics for scaling
  metrics:
    - type: Resource  # Type of the metric to be used for scaling
      resource:
        name: cpu  # The resource to be monitored
        target:
          type: Utilization  # Utilization target type
          averageUtilization: 50  # Target CPU utilization percentage for scaling

---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: producer-service-account
  namespace: sdtd-project

---
# Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: sdtd-project
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["producer-secret"]
  verbs: ["get", "watch", "list"]

---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-secret
  namespace: sdtd-project
subjects:
- kind: ServiceAccount
  name: producer-service-account
  namespace: sdtd-project
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: producer-secret
  namespace: sdtd-project
type: Opaque
data:
  WEATHER_API_KEY_1: NjgzMDA3NDExOGI5YWE0NzQyYzZmMDA2ZTQzODFhYjY=
  WEATHER_API_KEY_2: MjUwNzJhZjRlYTIxYTIzYzg0OWE1ZDhiZGMzMDhkMmQ=
  WEATHER_API_KEY_3: YmNkYjZiMzBlZDBlZDFhNmE5ZTA3YzBjZWI3YWU1ZDM=
  WEATHER_API_KEY_4: YTY2OGFjM2RjMmJjYzhhNjVkZGJkMWQ5ZTZhYmE5YWU=

---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: producer-config
  namespace: sdtd-project
data:
  API_URL: https://api.openweathermap.org/data/2.5
  PRODUCER_MONGODB_COLLECTION: pendingCities
  KAFKA_NUM_PARTITIONS: "1"
  PRODUCER_MAX_WORKERS: "20"

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
  namespace: sdtd-project
spec:
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      serviceAccountName: producer-service-account
      initContainers:
      - name: check-kafka
        image: busybox:1.28
        command:
        - sh
        - -c
        - until nslookup kafka; do echo waiting for kafka; sleep 2; done
      containers:
      - name: producer
        image: ghbadr/producer:8092dfac
        resources:
            requests:
              cpu: "300m"
              memory: "200Mi"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - ps aux | grep python || exit 1
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - ps aux | grep python || exit 1
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              name: producer-config
              key: API_URL
        - name: PRODUCER_MONGODB_COLLECTION
          valueFrom:
            configMapKeyRef:
              name: producer-config
              key: PRODUCER_MONGODB_COLLECTION
        - name: KAFKA_NUM_PARTITIONS
          valueFrom:
            configMapKeyRef:
              name: producer-config
              key: KAFKA_NUM_PARTITIONS
        - name: PRODUCER_MAX_WORKERS
          valueFrom:
            configMapKeyRef:
              name: producer-config
              key: PRODUCER_MAX_WORKERS
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: WEATHER_API_KEY_1
          valueFrom:
            secretKeyRef:
              name: producer-secret
              key: WEATHER_API_KEY_1
        - name: WEATHER_API_KEY_2
          valueFrom:
            secretKeyRef:
              name: producer-secret
              key: WEATHER_API_KEY_2
        - name: WEATHER_API_KEY_3
          valueFrom:
            secretKeyRef:
              name: producer-secret
              key: WEATHER_API_KEY_3
        - name: WEATHER_API_KEY_4
          valueFrom:
            secretKeyRef:
              name: producer-secret
              key: WEATHER_API_KEY_4
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: MONGODB_URL
        - name: MONGODB_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: MONGODB_DB_NAME